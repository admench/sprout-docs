(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{167:function(t,e,s){t.exports=s.p+"assets/img/sprout-notes-collapse.202ec2ca.gif"},321:function(t,e,s){"use strict";s.r(e);var i=[function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The Notes Field comes with five styles which you can use to style your field's Instructions field.  You can update these styles in the "),e("em",[this._v("Plugin Settings")]),this._v(" and select which style you wish to use in the "),e("em",[this._v("Field Settings")]),this._v(".  Add the content you wish to be styled to your field's Instructions field (using HTML, Markdown, or plain text).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(167),alt:"Notes field can be expanded or collapsed"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"field-settings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#field-settings","aria-hidden":"true"}},[this._v("#")]),this._v(" Field Settings")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{pre:!0},[e("p",[this._v("To assign the Notes field type to your section, create a new Field and select the Type "),e("code",[this._v("Notes")]),this._v(".  Once you have selected the Notes field type, you can select your preferred style from the style dropdown.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"plugin-settings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#plugin-settings","aria-hidden":"true"}},[this._v("#")]),this._v(" Plugin Settings")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Primary Information")]),e("li",[this._v("Secondary Information")]),e("li",[this._v("Warning")]),e("li",[this._v("Danger")]),e("li",[this._v("Highlight")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Understandably, these are extremely deterministic naming conventions.  Ideally, in the future, we'd make it easy for you to update those names to whatever you prefer.  Right now, that's what you get. If you need another style, such as \"Disco\", you are just going to have to appropriate one of the above names for your devious cause.  If this is your dilemma, I'd recommend starting with "),e("em",[this._v("Danger")]),this._v("!")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-twig extra-class"},[s("pre",{pre:!0,attrs:{class:"language-twig"}},[s("code",[s("span",{attrs:{class:"token other"}},[t._v("#fields-")]),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token ld"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("{{")])]),t._v(" "),s("span",{attrs:{class:"token property"}},[t._v("name")]),t._v(" "),s("span",{attrs:{class:"token rd"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("}}")])])]),s("span",{attrs:{class:"token other"}},[t._v("-field {}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{pre:!0},[e("p",[this._v("The "),e("code",[this._v("{{ name }}")]),this._v(" value will get swapped out with your field's name to create the proper ID when the block is being rendered.  Currently, spacing matters, so use the "),e("code",[this._v("{{ name }}")]),this._v(" value exactly as you see it in the other examples.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"availability"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#availability","aria-hidden":"true"}},[this._v("#")]),this._v(" Availability")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"table"},[e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[this._v("Craft Version")]),e("th",{staticStyle:{"text-align":"center"}},[this._v("Available")])])]),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[this._v("Craft 3")]),e("td",{staticStyle:{"text-align":"center"}},[e("strong",[this._v("✓")])])]),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[this._v("Craft 2")]),e("td",{staticStyle:{"text-align":"center"}},[e("strong",[this._v("✗")])])])])])])}],a=s(0),n=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h1",[t._v("Notes Field")]),t._m(0),s("p",[t._v("Notes fields can be expanded or collapsed on a user by user basis.")]),t._m(1),t._m(2),t._m(3),t._m(4),s("p",[t._v("By default, Notes have five styles:")]),t._m(5),t._m(6),s("p",[t._v("You can adjust your custom styles here.  If you want to be able to style each block individually, you have to target the field's ID in the CSS.  To do so, use the following naming convention in your CSS styles:")]),t._m(7),t._m(8),t._m(9),t._m(10),s("p",[t._v("See here for documentation on the "),s("router-link",{attrs:{to:"./notes-field.html"}},[t._v("Notes Field for Craft 3")]),t._v(".")],1)])},i,!1,null,null,null);n.options.__file="notes-field-c2.md";e.default=n.exports}}]);